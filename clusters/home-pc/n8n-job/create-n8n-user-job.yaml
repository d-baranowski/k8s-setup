apiVersion: batch/v1
kind: Job
metadata:
  name: create-n8n-user
  namespace: default
spec:
  template:
    spec:
      containers:
      - name: psql
        image: postgres:16
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: psql-owner-password
              key: password
        - name: N8N_PASSWORD
          valueFrom:
            secretKeyRef:
              name: n8n-user-password
              key: password
        command: ["sh", "-c"]
        args:
        - |
          echo "Checking if n8nuser exists or needs to be created"
          psql -h db-cluster-rw.default.svc.cluster.local -U owner -d postgres -c \
          "DO \$\$ BEGIN IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = 'n8nuser') THEN CREATE ROLE n8nuser WITH LOGIN PASSWORD '${N8N_PASSWORD}'; END IF; END \$\$;"
          echo "n8n user setup completed"
          echo "Checking if n8n database exists"
          if ! psql -h db-cluster-rw.default.svc.cluster.local -U owner -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname = 'n8n'" | grep -q 1; then
            echo "Creating n8n database"
            psql -h db-cluster-rw.default.svc.cluster.local -U owner -d postgres -c "CREATE DATABASE n8n OWNER n8nuser;"
          else
            echo "n8n database already exists"
          fi
          echo "Granting privileges on n8n database to n8nuser"
          psql -h db-cluster-rw.default.svc.cluster.local -U owner -d postgres -c "GRANT ALL PRIVILEGES ON DATABASE n8n TO n8nuser;"
          echo "n8n database setup completed"
      restartPolicy: OnFailure
